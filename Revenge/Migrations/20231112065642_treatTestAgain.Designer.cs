// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Revenge.Models;

#nullable disable

namespace Revenge.Migrations
{
    [DbContext(typeof(RevengeContext))]
    [Migration("20231112065642_treatTestAgain")]
    partial class treatTestAgain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Revenge.Models.Flavor", b =>
                {
                    b.Property<int>("FlavorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FlavorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("FlavorID");

                    b.ToTable("Flavors");
                });

            modelBuilder.Entity("Revenge.Models.FlavorTreat", b =>
                {
                    b.Property<int>("FlavorTreatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FlavorID")
                        .HasColumnType("int");

                    b.Property<int>("TreatID")
                        .HasColumnType("int");

                    b.HasKey("FlavorTreatID");

                    b.HasIndex("FlavorID");

                    b.HasIndex("TreatID");

                    b.ToTable("FlavorTreats");
                });

            modelBuilder.Entity("Revenge.Models.Treat", b =>
                {
                    b.Property<int>("TreatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Flavor")
                        .HasColumnType("int");

                    b.Property<int?>("FlavorID")
                        .HasColumnType("int");

                    b.Property<string>("TreatName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TreatID");

                    b.HasIndex("FlavorID");

                    b.ToTable("Treats");
                });

            modelBuilder.Entity("Revenge.Models.FlavorTreat", b =>
                {
                    b.HasOne("Revenge.Models.Flavor", "Flavor")
                        .WithMany("JoinEntities")
                        .HasForeignKey("FlavorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Revenge.Models.Treat", "Treat")
                        .WithMany("JoinEntities")
                        .HasForeignKey("TreatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flavor");

                    b.Navigation("Treat");
                });

            modelBuilder.Entity("Revenge.Models.Treat", b =>
                {
                    b.HasOne("Revenge.Models.Flavor", null)
                        .WithMany("Treat")
                        .HasForeignKey("FlavorID");
                });

            modelBuilder.Entity("Revenge.Models.Flavor", b =>
                {
                    b.Navigation("JoinEntities");

                    b.Navigation("Treat");
                });

            modelBuilder.Entity("Revenge.Models.Treat", b =>
                {
                    b.Navigation("JoinEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
